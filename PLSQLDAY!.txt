Class day 1
-----------------------------------------------
declare
v_ename varchar2(20);
v_job varchar2(20);
v_empno number:=&empno;
begin
select ename,job into v_ename,v_job from emp where empno=v_empno;
dbms_output.put_line('ename is '||v_ename||'ejob is'||v_job);
end;
/
------------------------------------------------
declare
rec emp%rowtype;
v_empno number:=&eno;
begin
select * into rec from emp where empno=v_empno;
dbms_output.put_line('name is'||rec.ename||'sal is'||rec.sal);
end;
/
--------------------------------------------------------
declare
v_ename emp.ename%type;
v_sal emp.sal%type;
v_empno number:=&empno;
begin
select ename,sal into v_ename,v_sal from emp where empno=v_empno;
dbms_output.put_line('name is'||v_ename||'sal is'||v_sal);
end;
/
---------------------------------------------------
declare
a number:=&n1;
begin
if (mod(a,2)=0) then
dbms_output.put_line('number is even');
else
dbms_output.put_line('number is odd');
end if;
end;
/
----------------------------------------------------
DECLARE
a number :=&num1;
b number:= &num2;
c number:=&num3;
begin
if (a>b and a>c) then
dbms_output.put_line(a||'is max number');
elsif(b>c)then
dbms_output.put_line(b||'is max number');
else
dbms_output.put_line(c||'is max number');
end if;
end;
/
-----------------------------------------------------------
declare
i number:=1;
begin
loop
exit when(i>5);
dbms_output.put_line(i);
i:=i+1;
end loop;
end;
/
-------------------------------------
begin
for i in 1..5
loop
dbms_output.put_line(i);
end loop;
end;
/
------------------------------------
begin
for i in reverse 1..5
loop
dbms_output.put_line(i);
end loop;
end;
/
------------------------------------
declare
maxsal number;
begin
select max(sal) into maxsal from emp;
dbms_output.put_line(maxsal);
end;
/
====================================
assignment day 1
-------------------
4)
declare
i number:=&num1;
j number:=&num2;
result number;
begin
result:=((i/j)+j);
dbms_output.put_line(result);
end;
/
----------------------------
5)
declare
MAX_SAL number;AVG_SAL 
MIN_SAL number;
v_deptno number:=&deptno;
begin
select max(sal), min(sal) into MAX_SAL,MIN_SAL from emp where deptno=v_deptno;
dbms_output.put_line('max sal is'||MAX_SAL||'min sal is'||MIN_SAL);
end;
/
------------------------------------
6)
declare
v_jobid varchar2(20):='&jobid';
AVG_SAL number;
begin
select avg(sal) into AVG_SAL from emp where job=v_jobid;
dbms_output.put_line('job : '||v_jobid||'avergae sal is'||AVG_SAL );
end;
/
---------------------------------
7)declare
   v_empid number:=&empno;
   v_sal emp.sal%type;
   begin
   select sal into v_sal from emp where empno=v_empid;
   if v_sal<2500 then
   dbms_output.put_line('LOW');
   elsif v_sal between 2500 and 5000 then
   dbms_output.put_line('MEDIUM');
   elsif v_sal >5000 then
   dbms_output.put_line('HIGH');
   end if;
   end;
/
--------------------------------------------
8)
declare
v_num number:=&no;
begin
case v_num

when 1 then
dbms_output.put_line('January');
when 2 then
dbms_output.put_line('February');
when 3 then
dbms_output.put_line('March');
when 4 then
dbms_output.put_line('April');
when 5 then
dbms_output.put_line('May');
when 6 then
dbms_output.put_line('June');
when 7 then
dbms_output.put_line('July');
when 8 then
dbms_output.put_line('August');
when 9 then
dbms_output.put_line('September');
when 10 then
dbms_output.put_line('Octomber');
when 11 then
dbms_output.put_line('November');
when 12 then
dbms_output.put_line('december');

end case;
end;
/
-----------------------------------------
9)
declare
v_no number:=&no;
v_fact number:=1;
begin
for i in 1..v_no
loop
v_fact:=v_fact*i;
end loop;
dbms_output.put_line('factorial is '||v_fact);
end;
/
----------------------------------------------
10)(schema in plsql)
declare
v_billno bill_details.bill_no%type:=&billno;
v_cust_id  customers.cust_id%type;
v_plan_name plans.plan_name%type;
v_bill_amount bill_details. BILL_AMOUNT%type;
v_SERVICE_ID services.SERVICE_ID%type;
v_SERVICE_NAME services.SERVICE_NAME%type;
v_plan_id plans.PLAN_ID%type;
begin
select cust_id,bill_amount into v_cust_id,v_bill_amount from bill_details where bill_no=v_billno;
select p.plan_name into v_plan_name from plans p, customers c where p.plan_id=c.plan_id and c.cust_id=v_cust_id ;
select s.service_name into v_SERVICE_NAME from services s,plans p where p.service_id=s.service_id and p.plan_name=v_plan_name;
dbms_output.put_line(v_billno||v_cust_id  ||v_plan_name||v_bill_amount||v_SERVICE_NAME );
end;
/
--------------------------------------------
11)
--------------------------------------------
PLSQL DAY2
--------------------------------------------
declare
cursor c_emp is select * from emp;
v_emp c_emp%rowtype;
begin
open c_emp;
for v_counter in 1..10
loop
fetch c_emp into v_emp;
dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
close c_emp;
end;
/
-------------------------------------------
declare
cursor c_emp is select * from emp;
v_emp c_emp%rowtype;
begin
open c_emp;
loop
fetch c_emp into v_emp;
exit when c_emp%notfound;
dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
if c_emp%isopen then
dbms_output.put_line('closing cursor');
end if;
close c_emp;
end;
/
-------------------------------------------------
passing parameter ---------------------
------------------------------------------------
declare
cursor c_emp(p_deptno number) is select * from emp where deptno=p_deptno;
v_emp c_emp%rowtype;
begin

open c_emp(10);
dbms_output.put_line('for deptno 10');
loop
fetch c_emp into v_emp;
exit when c_emp%notfound;
dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
close c_emp;

open c_emp(20);
dbms_output.put_line('for deptno 20');
loop
fetch c_emp into v_emp;
exit when c_emp%notfound;
dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
close c_emp;

end;
/
---------------------------------------------------
reduced lines of code by using for loop--no open,close,fetch
---------------------------------------------------
declare
cursor c_emp(p_deptno number) is select * from emp where deptno=p_deptno;
begin
dbms_output.put_line('for deptno 10');
for v_emp in c_emp(10)
loop
dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
dbms_output.put_line('for deptno 20');
for v_emp in c_emp(20)
loop

dbms_output.put_line('ename'||v_emp.ename||'sal'||v_emp.sal);
end loop;
end;
/
------------------------------------------------------
IMPLICIT CURSOR
------------------------------------------------------
begin
update emp set sal=sal+1000 where deptno=10;
if SQL%found then
dbms_output.put_line('record updated -number of records updated'||SQL%rowcount);
else
dbms_output.put_line('records not upadated');
end if;
end;
/
----------------------------------------------------------------
assignment 2
----------------------------------------------------------------
1)
declare
v_deptno number:=&deptno;
begin
update emp set sal=sal+0.1*sal  where deptno=v_deptno;
if SQL%found then
dbms_output.put_line('records updated number of rows updated '||SQL%rowcount);
else
dbms_output.put_line('records not updated');
end if;
end;
/
-------------------------------------------------------------------
2)
i)by using exit when condition
------------------------------------
declare
cursor c_emp is select ename,sal,job from emp;
v_emp c_emp%rowtype;
i number:=1;

begin
  open c_emp;
    loop
    fetch c_emp into v_emp;
    exit when (i=6);
    dbms_output.put_line('name is '||v_emp.ename||'sal is'||v_emp.sal||'job is '||v_emp.job);
    i:=i+1;
    end loop;
  close c_emp;
end;
/
-------------------------------------------
ii)while loop
------------------------------------------
declare
cursor c_emp is select ename,sal,job from emp;
v_emp c_emp%rowtype;
i number:=1;
begin
open c_emp;
while (i<=5)
loop
fetch c_emp into v_emp;
dbms_output.put_line('name is '||v_emp.ename||'sal is'||v_emp.sal||'job is '||v_emp.job);
 i:=i+1;
 end loop;
close c_emp;
end;
/
------------------------------------------------
iii)for loop
declare
cursor c_emp is select ename,sal,job from emp;
v_emp c_emp%rowtype;
begin
open c_emp;
for c in 1..5
loop
fetch c_emp into v_emp;
dbms_output.put_line('name is '||v_emp.ename||'sal is'||v_emp.sal||'job is '||v_emp.job);
end loop;
close c_emp;
end;
/
---------------------------------------------------------------
---------------------------------------------------------------
3)
declare
cursor c_emp is select ename,sal from emp where lower(job) like 'clerk';
v_emp c_emp%rowtype;
begin
open c_emp;
loop
fetch c_emp into v_emp;
exit when c_emp%notfound;
dbms_output.put_line('name is'||v_emp.ename||'sal is'|| v_emp.sal);
end loop;
close c_emp;
end;
/
------------------------------------------------------------------
4)
declare
cursor c_emp(p_jobid emp.job%type) is select ename, deptno, sal from emp where job='&empid';

v_emp c_emp%rowtype;
begin
open c_emp('p_jobid' );
loop
fetch c_emp into v_emp;
exit when c_emp%notfound;
dbms_output.put_line('name is'||v_emp.ename||'sal is'|| v_emp.sal||'deptno'||v_emp.deptno);
end loop;
close c_emp;
end;
/
---------------------------------------------------------
5)
declare
cursor c_employees is select * from employees for update;
begin

for v_employees in c_employees
loop
if (v_employees.department_id=10 and v_employees.job_id='SH-CLERK') then
update employees set salary=(1.2*salary) where current of c_employees;
elsif (v_employees.department_id=20 and v_employees.job_id='ST-MAN') then
update employees set salary=(1.05*salary)  where current of c_employees ;
else 
update employees set salary =1.1*salary  where current of c_employees;
end if;
end loop;
end;
/
---------------------------------------------------------------------
6)
declare
cursor c_dept is select * from dept;
cursor c_emp(p_deptno number) is select * from emp where deptno=p_deptno;
begin
    for v_dept in c_dept
    loop
           dbms_output.put_line(v_dept.deptno||'    '||v_dept.dname||'    ');
           for v_emp in c_emp(v_dept.deptno)
           loop
           dbms_output.put_line(v_emp.empno||'    '|| v_emp.ename||'    '||v_emp.sal||'    '||v_emp.job);
            end loop;
     end loop;
end;
/ 
=====================================================
PLSQL DAY 3
--------------------------------------------
declare
   v_sal emp.sal%type;
   var number(3);
   z number;
begin
   var:=100;
   z:=10;
   select sal into v_sal from emp where empno=7788;
   dbms_output.put_line('sal is'||v_sal);

exception
when no_data_found then
dbms_output.put_line('empno not available');
when zero_divide then
dbms_output.put_line('dont try to divide by 0');
when others then
dbms_output.put_line('exception raised');
end;
/
--------------------------------------------------
declare
v_sal emp.sal%type;
var number(3);
z number;
begin
var:=1000;
z:=10/0;
select sal into v_sal from emp where empno=1;
dbms_output.put_line('sal is ='||v_sal);

exception
when no_data_found or value_error then
dbms_output.put_line('empno not available or value error');
when zero_divide then
dbms_output.put_line('dont try to divide by zero');
when others then
dbms_output.put_line('exception raised');
end;
/
----------------------------------------------------
begin
    declare
        v_sal emp.sal%type;
        var number(3):=100;
        z number;
        begin
        z:=10/0;
        select sal into v_sal from emp where empno=7788;
        dbms_output.put_line('sal is '||v_sal);
        end;

exception
when no_data_found or value_error then
dbms_output.put_line('empno not available or value error');
when zero_divide then
dbms_output.put_line('we cannot divide by zero');
when too_many_rows then
dbms_output.put_line('multiple rows fetched');
when others then
dbms_output.put_line('exception raised');
end;
/  
-----------------------------------------------------------
declare
    var number(3);
    z number;
begin
    begin
       var:=100;
       dbms_output.put_line('var is '||var);
    exception
        when no_data_found or value_error then
        dbms_output.put_line('no data available or value error');
    end;
z:=10/0;
exception
when zero_divide then
dbms_output.put_line('dont try to divide by zero');
when others then
dbms_output.put_line(' exception raised');
end;
/
----------------------------------------------------
pragma exception_init(childfound, -02292);
-------------------------------------------
declare
childfound exception;
begin
delete dept where deptno=10;
dbms_output.put_line('dept 10 is deleted');
exception
when childfound then
dbms_output.put_line('emp existing in dept 10');
end;
/
------------------------------------------------
declare
marks number;
wrong_marks exception;
begin
marks:=&marks;
if marks>100 then
raise wrong_marks;
end if;
dbms_output.put_line('you have scored :'||marks);

exception
when wrong_marks then
dbms_output.put_line('please enter proper marks < 100');
end;
/
----------------------------
declare
emp_id number:=&num1;
v_sal emp.sal%type;
amount number:=&amt;
wrong_amt exception;

begin
select sal into v_sal from emp where empno:=emp_id;
if (amount > v_sal) then
raise wrong_amt;
dbms_output.put_line('amount credited');
end if;

exception
when wrong_amt then
dbms_output.put_line('you have entered wrong amount');
end;
/
--------------------------------------------
declare
var number(3);
begin
var:=10000;
dbms_output.put_line('var is '||var);
exception 
when value_error then
dbms_output.put_line('error code ='||SQLCODE||'message='||SQLERRM);
end;
/
==============================================
Assignment 3----------
==============================================
1)
create table MESSAGES1(err_msg varchar2(250));

declare
v_sal number:=&sal;
v_ename emp.ename%type;

begin
select ename into v_ename from emp where sal=v_sal;
dbms_output.put_line(v_ename || 'has salary '||v_sal);

exception
when no_data_found then
dbms_output.put_line('No employee with salary of  '||v_sal);
insert into MESSAGES1 values ('No employee with salary of  '||v_sal);

when too_many_rows then
dbms_output.put_line('More than one employee with salary of '||v_sal);
insert into MESSAGES1 values ('More than one employee with salary of '||v_sal);

when others then
dbms_output.put_line('Some other error occurred');
insert into MESSAGES1 values('Some other error occurred');

end;
/
-------------------------------------------------------------------------------
2)
declare
DUPLICATE_DEPT exception;
v_loc varchar2(20):='&loc';
v_deptno number(2):=&deptno;
v_dname varchar2(20):='&deptname';
pragma EXCEPTION_INIT(DUPLICATE_DEPT, -00001);

begin
insert into dept values (v_deptno,v_dname,v_loc);

exception 
when DUPLICATE_DEPT then
dbms_output.put_line('duplication error');
end;
/
----------------------------------------------------------
3)
declare
duplicate_president exception;
v_count number;

begin
select count(*) into v_count  from emp where lower(job) like 'clerk';
if (v_count > 1) then
raise duplicate_president;
end if;
 
dbms_output.put_line('one president found');

exception
when duplicate_president then
dbms_output.put_line('more than one president');
end;
/
--------------------------------------------------------------
4)
declare
           empid1 number:=&emp1;
           empid2 number:=&emp2;
           sal1 number;
           sal2 number;
           e1 number:=0;
           e2 number:=0;
begin
begin
begin
            select sal into sal1 from emp where empno=empid1;
            update emp set sal=sal + sal*0.1 where empno=empid1;
exception
            when no_data_found then
            e1:=1;
end;
            select sal into sal2 from emp where empno=empid2;
            update emp set sal=sal+sal*0.2 where empno=empid2;
exception
            when no_data_found then
            e2:=1;
end;
            if(e1=1 or e2=1) then
            raise no_data_found;
            end if;
exception
            when no_data_found then
            if(e1=1 and e2=1) then
           dbms_output.put_line('sorry both employee are not present');
    elsif (e1=1 and e2=0) then
   dbms_output.put_line('sorry  employee1 is not present');
     elsif (e1=0 and e2=1) then
   dbms_output.put_line('sorry  employee2  is not present');
     end if;
end;
/ 














       

